version: "3.7"

services:
    web:
        container_name: nginx_server
        build: ./DockerFiles/DjangoServer
        ports:
            - 8000:8000
        command: sudo sh runServerBash.sh
        volumes:
            - ./Volume/DjangoServer/mydjango:/code
            - ./Airflow_Volume/dags:/airflowDagsFolder
            - ./Airflow_Volume/deleteDags:/deletedDag
            - ./Airflow_Volume/tarFolder:/tarFolder
        networks:
            - my-network
        restart: always
        tty: true

    jupyter:
        container_name: jupyter_server
        build: ./DockerFiles/JupyterServer
        ports:
            - 8001:8001
        command: jupyter notebook --port 8001 --ip 0.0.0.0 --NotebookApp.token=password --allow-root
        volumes:
            - ./Jupyter_Volume:/jupyterFolder
        restart: always
        tty: true

    airflow:
        container_name: airflow
        build: ./DockerFiles/AirFlow
        command: python3 /code/RunAirFlowServer.py
        ports:
            - 8002:8080
        volumes:
            - ./Airflow_Volume:/root/airflow
            - ./DockerFiles/AirFlow/pythonCode:/code
        networks:
            - my-network
        restart: always
        
    # testweb:
    #     container_name: django_test_server
    #     build: ./DockerFiles/DjangoServer
    #     ports:
    #         - 5566:5566
    #     command: sudo python manage.py runserver 0.0.0.0:5566
    #     volumes:
    #         - ./Volume/DjangoServer/mydjango:/code
    #         - ./Airflow_Volume/dags:/airflowDagsFolder
    #         - ./Airflow_Volume/deleteDags:/deletedDag
    #         - ./Airflow_Volume/tarFolder:/tarFolder
    #     networks:
    #         - my-network
    #     restart: always
    #     tty: true

networks:
    my-network:
        name: my-app-network
        